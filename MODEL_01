// 핀 설정

const int MOTOR_A1 = 9, MOTOR_A2 = 10;

const int MOTOR_B1 = 6, MOTOR_B2 = 7;

const int TRIG = 3, ECHO = 2;

const int TARGET_DIST = 20;  // 목표 거리 20cm

 

bool done = false;

 

void setup() {

  Serial.begin(9600);

  pinMode(MOTOR_A1, OUTPUT); pinMode(MOTOR_A2, OUTPUT);

  pinMode(MOTOR_B1, OUTPUT); pinMode(MOTOR_B2, OUTPUT);

  pinMode(TRIG, OUTPUT); pinMode(ECHO, INPUT);

  stopCar();

  Serial.println("=== 비상제동 실험 시작 ===");

  // 3초 카운트다운

  for(int i = 3; i > 0; i--) {

    Serial.println(String(i) + "초 남음...");

    delay(1000);

  }

  Serial.println("전진 시작!");

  moveForward();

}

 

void loop() {

  if(done) return;

  long dist = getDistance();

  if(dist <= 0) return;

  Serial.println("거리: " + String(dist) + "cm");

  if(dist <= TARGET_DIST) {

    Serial.println("[system]: " + String(dist) + "cm 감지! 즉시 정지!");

    stopCar();

    delay(2000);

    long finalDist = getDistance();

    Serial.println("\n=== 실험 결과 ===");

    Serial.println("최종 정지 거리: " + String(finalDist) + "cm");

    Serial.println("RESULT: " + String(finalDist));

    Serial.println("실험 완료!");

    done = true;

  }

  delay(100);

}

 

void moveForward() {

  digitalWrite(MOTOR_A1, HIGH);  digitalWrite(MOTOR_A2, LOW);

  digitalWrite(MOTOR_B1, HIGH); digitalWrite(MOTOR_B2, LOW);

}

 

void stopCar() {

  digitalWrite(MOTOR_A1, LOW); digitalWrite(MOTOR_A2, LOW);

  digitalWrite(MOTOR_B1, LOW); digitalWrite(MOTOR_B2, LOW);

}

 

long getDistance() {

  digitalWrite(TRIG, LOW);

  delayMicroseconds(2);

  digitalWrite(TRIG, HIGH);

  delayMicroseconds(10);

  digitalWrite(TRIG, LOW);

  long duration = pulseIn(ECHO, HIGH);

  long distance = duration * 0.034 / 2;

  return (distance < 2 || distance > 400) ? -1 : distance;

}
